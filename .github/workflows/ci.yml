name: CI
on: [push, pull_request]
jobs:

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-lint-modules-${{ hashFiles('**/yarn.lock') }}
      - uses: actions/setup-node@v3
        with:
          node-version: 14.x
      - run: yarn install
      - run: yarn run lint

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version:
          - 12.x
          - 14.x
          - 16.x
    steps:
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Ensure line endings are consistent
        run: git config --global core.autocrlf input
      - name: Check out repository
        uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-test-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        run: yarn install
      - name: Run tests
        run: yarn run test-ci
      - name: Submit coverage results
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.github_token }}
          flag-name: run-${{ matrix.node-version }}
          parallel: true

  coveralls:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Consolidate test coverage from different jobs
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.github_token }}
          parallel-finished: true

  docker:
    needs:
      - test
      - lint
    runs-on: ubuntu-latest
    steps:
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14.x'
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Load cache
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-docker-modules-v1-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        run: yarn install --pure-lockfile
      - name: Install Lerna Docker
        run: sh -c "`curl -fsSl https://raw.githubusercontent.com/rubensworks/lerna-docker/master/install.sh`"
      - name: Build Docker images
        run: ~/.lerna-docker/bin/lerna-docker linkeddatafragments build
      - name: Deploy Docker images
        if: startsWith(github.ref, 'refs/heads/master') || startsWith(github.ref, 'refs/tags/')
        run: ~/.lerna-docker/bin/lerna-docker linkeddatafragments push
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
